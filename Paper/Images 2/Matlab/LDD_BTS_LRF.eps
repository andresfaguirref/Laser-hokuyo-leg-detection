%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 8.3.0.532 (R2014a). Operating System: Microsoft Windows 8.1 Single Language.
%%Title: C:\Andres\Trabajo ECI\LRF\Paper\Images 2\Matlab\LDD_BTS_LRF.eps
%%CreationDate: 06/09/2019  17:15:16
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:  -206   151   818   640
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:  -206   151   818   640
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode -2472 7680 csm

    0     0 12292  5859 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 12293 5860 rf
6 w
0 4776 9526 0 0 -4776 1598 5215 4 MP
PP
-9526 0 0 4776 9526 0 0 -4776 1598 5215 5 MP stroke
4 w
DO
SO
6 w
0 sg
1598  439 mt 11124  439 L
1598 5215 mt 11124 5215 L
11124 5215 mt 11124  439 L
1598 5215 mt 1598  439 L
1598 5215 mt 11124 5215 L
1598 5215 mt 1598  439 L
2563 5215 mt 2563 5119 L
2563  439 mt 2563  534 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

2463 5360 mt 
(380) s
4218 5215 mt 4218 5119 L
4218  439 mt 4218  534 L
4118 5360 mt 
(400) s
5872 5215 mt 5872 5119 L
5872  439 mt 5872  534 L
5772 5360 mt 
(420) s
7527 5215 mt 7527 5119 L
7527  439 mt 7527  534 L
7427 5360 mt 
(440) s
9182 5215 mt 9182 5119 L
9182  439 mt 9182  534 L
9082 5360 mt 
(460) s
10837 5215 mt 10837 5119 L
10837  439 mt 10837  534 L
10737 5360 mt 
(480) s
1598 4766 mt 1693 4766 L
11124 4766 mt 11028 4766 L
1293 4810 mt 
(-300) s
1598 4127 mt 1693 4127 L
11124 4127 mt 11028 4127 L
1293 4171 mt 
(-200) s
1598 3488 mt 1693 3488 L
11124 3488 mt 11028 3488 L
1293 3532 mt 
(-100) s
1598 2849 mt 1693 2849 L
11124 2849 mt 11028 2849 L
1497 2893 mt 
(0) s
1598 2210 mt 1693 2210 L
11124 2210 mt 11028 2210 L
1363 2254 mt 
(100) s
1598 1570 mt 1693 1570 L
11124 1570 mt 11028 1570 L
1363 1614 mt 
(200) s
1598  931 mt 1693  931 L
11124  931 mt 11028  931 L
1363  975 mt 
(300) s
1598  439 mt 11124  439 L
1598 5215 mt 11124 5215 L
11124 5215 mt 11124  439 L
1598 5215 mt 1598  439 L
gs 1598 439 9527 4777 rc
/c8 { 0.000000 0.000000 1.000000 sr} bdef
c8
7 0 8 64 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 9 0 
8 0 8 0 8 0 8 0 8 -64 8 0 8 0 8 0 
9 0 8 0 8 0 8 0 8 0 8 0 8 0 8 64 
8 0 9 -64 8 0 8 0 8 0 8 0 8 0 8 -64 
8 0 8 -64 9 0 8 -64 8 0 8 -64 8 0 8 -64 
8 -64 8 -64 8 -64 9 0 8 -64 8 -63 8 -64 8 -64 
8 -128 8 -64 8 -64 8 -64 9 -64 8 -128 8 -64 8 -64 
8 -63 8 -64 8 -128 8 -64 8 -64 9 -128 8 -64 8 -64 
8 -128 8 -63 8 -64 8 -128 8 -64 8 -64 9 -64 8 -128 
8 -64 8 -64 8 -64 8 -127 8 -64 8 -64 8 -64 8 -64 
9 -64 8 -64 8 -64 8 -64 8 -64 8 -64 8 -64 8 -64 
8 0 9 -63 8 -64 8 0 8 -64 8 0 8 -64 8 0 
8 0 8 0 9 -64 8 0 8 0 8 0 8 0 8 0 
8 0 8 -64 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 0 8 0 8 0 8 64 8 0 8 0 9 0 
8 0 8 0 8 -64 8 64 8 0 8 0 8 0 8 0 
9 64 8 0 8 64 8 64 8 64 8 0 8 63 8 64 
8 64 9 128 8 64 8 64 8 128 8 64 8 64 8 128 
8 63 8 128 9 64 8 128 8 64 8 128 8 64 8 128 
8 64 8 127 8 128 9 64 8 128 8 64 8 128 8 64 
8 127 8 64 8 64 8 128 9 64 8 128 8 64 8 64 
8 64 8 64 8 64 8 63 8 64 8 64 9 64 8 64 
8 64 8 0 8 64 8 64 8 0 8 0 8 64 9 0 
8 0 8 0 8 64 8 0 8 0 8 0 8 0 8 0 
9 0 8 0 8 0 8 64 8 0 8 0 8 0 8 0 
8 0 9 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 9 0 8 0 8 0 8 0 8 64 8 0 
8 0 8 0 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 -64 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8701 803 300 MP stroke
8 0 8 0 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 64 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 -64 8 0 8 0 8 -64 8 0 8 -64 9 0 
8 -64 8 0 8 -64 8 -64 8 -64 8 -64 8 -64 8 0 
8 -64 9 -127 8 -64 8 -64 8 -64 8 -64 8 -128 8 -64 
8 -64 8 -128 9 -64 8 -64 8 -127 8 -64 8 -128 8 -64 
8 -128 8 -64 8 -128 9 -64 8 -127 8 -64 8 -128 8 -64 
8 -128 8 -64 8 -128 8 -64 9 -64 8 -127 8 -64 8 -64 
8 -128 8 -64 8 -64 8 -64 8 -64 9 -64 8 -64 8 -64 
8 -63 8 0 8 -64 8 -64 8 0 8 -64 9 0 8 0 
8 -64 8 0 8 0 8 0 8 0 8 -64 8 0 9 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
9 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 9 0 8 -64 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 9 0 8 0 8 0 8 0 8 0 8 0 
8 64 8 0 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 9 64 8 0 8 64 8 0 
8 64 8 64 8 0 8 64 8 63 8 64 9 64 8 64 
8 64 8 64 8 128 8 64 8 64 8 64 8 128 9 63 
8 64 8 128 8 64 8 64 8 128 8 64 8 64 8 128 
9 64 8 63 8 128 8 64 8 64 8 128 8 64 8 64 
8 128 9 64 8 63 8 128 8 64 8 64 8 64 8 64 
8 128 8 64 9 64 8 64 8 64 8 63 8 64 8 64 
8 0 8 64 8 64 9 64 8 0 8 64 8 0 8 64 
8 0 8 64 8 0 8 0 9 64 8 0 8 0 8 0 
8 0 8 0 8 64 8 0 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 9 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 64 8 0 
9 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 9 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 9 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 0 8 0 8 0 
8 -64 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 0 8 0 6276 803 300 MP stroke
8 0 8 0 8 0 8 -64 9 0 8 0 8 -64 8 0 
8 -64 8 0 8 -64 8 -64 8 0 9 -64 8 -64 8 -64 
8 -64 8 -64 8 -63 8 -64 8 -64 8 -64 9 -128 8 -64 
8 -64 8 -128 8 -64 8 -64 8 -127 8 -64 8 -64 9 -128 
8 -64 8 -128 8 -64 8 -128 8 -64 8 -127 8 -64 8 -128 
9 -64 8 -128 8 -64 8 -64 8 -128 8 -64 8 -63 8 -128 
8 -64 9 -64 8 -64 8 -64 8 -64 8 -64 8 -64 8 -64 
8 -64 8 0 9 -64 8 -63 8 0 8 0 8 -64 8 0 
8 0 8 -64 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 -64 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 9 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
9 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 9 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 9 0 8 0 8 64 8 0 8 0 8 64 
8 0 8 64 8 63 9 64 8 0 8 64 8 64 8 64 
8 64 8 128 8 64 8 64 9 64 8 64 8 127 8 64 
8 64 8 128 8 64 8 64 8 128 9 64 8 64 8 128 
8 63 8 128 8 64 8 64 8 128 8 64 9 128 8 64 
8 127 8 64 8 64 8 128 8 64 8 64 8 128 9 64 
8 64 8 64 8 64 8 127 8 64 8 64 8 0 8 64 
9 64 8 64 8 64 8 0 8 64 8 64 8 0 8 0 
8 64 9 0 8 0 8 64 8 0 8 0 8 0 8 0 
8 0 8 0 9 64 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 63 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 9 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
9 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 9 0 8 0 8 0 8 0 8 0 8 -63 8 0 
8 0 8 0 9 0 8 0 8 0 8 0 8 0 8 0 
8 63 8 0 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 -63 8 0 8 0 9 0 8 -64 8 0 8 -64 
8 0 8 -64 8 -64 8 0 8 -64 9 -64 8 -64 8 -64 
8 -64 8 -64 8 -64 8 -64 8 -127 8 -64 9 -64 8 -64 
8 -128 8 -64 8 -64 3851 2018 300 MP stroke
8 -128 8 -64 8 -127 8 -64 9 -64 8 -128 8 -64 8 -64 
8 -128 8 -64 8 -64 8 -127 8 -64 9 -64 8 -128 8 -64 
8 -64 8 -64 8 -128 8 -64 8 -64 8 -64 9 -127 8 -64 
8 -64 8 -64 8 -64 8 -64 8 -64 8 -64 8 0 8 -64 
9 -64 8 0 8 -64 8 0 8 -64 8 0 8 0 8 -63 
8 0 9 0 8 0 8 -64 8 0 8 0 8 0 8 0 
8 0 8 0 9 0 8 0 8 0 8 0 8 -64 8 0 
8 0 8 0 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 0 8 0 8 0 8 64 8 0 8 0 9 0 
8 -64 8 0 8 0 8 0 8 64 8 0 8 0 8 0 
9 64 8 0 8 0 8 63 8 64 8 0 8 64 8 64 
8 64 9 64 8 64 8 64 8 64 8 64 8 64 8 64 
8 127 8 64 9 64 8 128 8 64 8 64 8 128 8 64 
8 64 8 128 8 63 9 128 8 64 8 64 8 128 8 64 
8 64 8 128 8 64 8 63 9 128 8 64 8 64 8 64 
8 128 8 64 8 64 8 64 8 64 8 64 9 63 8 64 
8 64 8 64 8 64 8 64 8 0 8 64 8 0 9 64 
8 0 8 64 8 0 8 0 8 64 8 0 8 0 8 0 
9 64 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 0 9 0 8 0 8 0 8 64 8 0 8 0 8 0 
8 0 8 0 9 0 8 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 9 0 8 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 9 0 8 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 9 0 8 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 9 0 8 0 
8 0 8 0 8 0 8 0 8 0 8 0 8 0 9 0 
8 -64 8 0 8 0 8 64 8 0 8 0 8 0 8 0 
9 0 8 0 8 0 8 0 8 0 8 0 8 0 8 0 
8 -64 9 0 8 0 8 -64 8 0 8 -64 8 0 8 -64 
8 -64 8 0 9 -64 8 -64 8 -64 8 -64 8 -64 8 -64 
8 -63 8 -64 8 -128 8 -64 9 -64 8 -64 8 -128 8 -64 
8 -64 8 -64 8 -127 8 -64 8 -128 7 -56 1598 2585 279 MP stroke
/c9 { 1.000000 0.000000 0.000000 sr} bdef
c9
40 9 82 0 83 -124 83 -65 82 13 83 -192 83 -219 83 -594 
82 -507 83 -648 83 -580 83 -253 82 -260 83 -122 83 61 83 38 
82 -32 83 322 83 509 83 718 82 686 83 578 83 279 83 225 
82 207 83 -44 83 9 83 -51 82 -70 83 -80 83 163 83 22 
82 -86 83 -516 83 -506 83 -556 82 -698 83 -498 83 -284 83 -196 
82 24 83 -27 83 -46 83 164 82 267 83 584 83 582 83 527 
82 635 83 316 83 234 83 73 82 -53 83 -27 83 -1 83 -71 
82 80 83 -39 83 26 83 -77 82 -470 83 -538 83 -628 83 -637 
82 -396 83 -272 83 -147 83 68 82 -21 83 -39 83 -28 83 253 
82 279 83 528 83 643 82 693 83 495 83 296 83 57 82 74 
83 19 83 -40 83 -21 82 -101 83 54 83 -29 83 -116 82 -372 
83 -560 83 -555 83 -624 82 -455 83 -299 83 -208 83 -39 82 11 
83 24 83 -72 83 -8 82 310 83 357 83 666 83 618 82 598 
83 425 83 176 83 151 82 10 83 49 83 -27 83 -56 82 -3 
83 -8 83 -79 83 -319 54 -312 1598 1792 117 MP stroke
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
